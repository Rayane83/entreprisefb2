#!/bin/bash

# üöÄ Script de lancement rapide - Portail Entreprise Flashback Fa v2.0.0
# V√©rifie la configuration Discord et lance l'application

set -e

# Couleurs
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
NC='\033[0m'

print_header() {
    clear
    echo -e "${PURPLE}"
    echo "=================================================================================================="
    echo "üöÄ LANCEMENT - PORTAIL ENTREPRISE FLASHBACK FA v2.0.0"
    echo "=================================================================================================="
    echo -e "${NC}"
}

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

print_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

# V√©rifier si Discord est configur√©
check_discord_config() {
    local backend_env="$BACKEND_DIR/.env"
    local frontend_env="$FRONTEND_DIR/.env"
    
    if [[ ! -f "$backend_env" ]] || [[ ! -f "$frontend_env" ]]; then
        return 1
    fi
    
    # V√©rifier si les Client IDs sont configur√©s
    local backend_client_id=$(grep "^DISCORD_CLIENT_ID=" "$backend_env" | cut -d'=' -f2)
    local frontend_client_id=$(grep "^REACT_APP_DISCORD_CLIENT_ID=" "$frontend_env" | cut -d'=' -f2)
    
    if [[ -z "$backend_client_id" ]] || [[ -z "$frontend_client_id" ]]; then
        return 1
    fi
    
    # V√©rifier si ce sont de vrais IDs (pas vides)
    if [[ "$backend_client_id" =~ ^[0-9]{18,19}$ ]] && [[ "$frontend_client_id" =~ ^[0-9]{18,19}$ ]]; then
        return 0
    fi
    
    return 1
}

# V√©rifier les services
check_services() {
    local all_services_ok=true
    
    # V√©rifier MySQL/MariaDB
    if ! pgrep -x "mysqld\|mariadbd" > /dev/null; then
        print_warning "Base de donn√©es MySQL non d√©marr√©e"
        print_info "D√©marrage de MariaDB..."
        service mariadb start
        sleep 2
    fi
    
    if pgrep -x "mysqld\|mariadbd" > /dev/null; then
        print_success "Base de donn√©es MySQL active"
    else
        print_error "Impossible de d√©marrer la base de donn√©es"
        all_services_ok=false
    fi
    
    # V√©rifier/D√©marrer les services avec supervisor
    if command -v supervisorctl >/dev/null 2>&1; then
        print_info "Red√©marrage des services..."
        sudo supervisorctl restart backend frontend
        sleep 3
        
        # V√©rifier le backend
        if curl -s http://localhost:8001/health > /dev/null 2>&1; then
            print_success "Backend FastAPI op√©rationnel (port 8001)"
        else
            print_warning "Backend non accessible, v√©rifiez les logs"
            all_services_ok=false
        fi
        
        # V√©rifier le frontend
        if curl -s http://localhost:3000 > /dev/null 2>&1; then
            print_success "Frontend React op√©rationnel (port 3000)"
        else
            print_warning "Frontend non accessible, v√©rifiez les logs"
            all_services_ok=false
        fi
    else
        print_error "supervisorctl non trouv√©"
        all_services_ok=false
    fi
    
    return $([ "$all_services_ok" = true ] && echo 0 || echo 1)
}

# Afficher les informations d'acc√®s
show_app_info() {
    echo ""
    echo -e "${GREEN}=================================================================================================="
    echo "üåü APPLICATION D√âMARR√âE AVEC SUCC√àS !"
    echo "=================================================================================================="
    echo -e "${NC}"
    
    echo "üì± Acc√®s √† l'application:"
    echo "   üåê Application: http://localhost:3000"
    echo "   üîß API Backend: http://localhost:8001"
    echo "   üìö Documentation API: http://localhost:8001/docs"
    echo "   üíä Status Sant√©: http://localhost:8001/health"
    echo ""
    
    if check_discord_config; then
        echo "üîê Authentification:"
        echo "   ‚úÖ Discord OAuth configur√© et actif"
        echo "   üîó Connectez-vous via Discord sur l'interface"
    else
        echo "üîê Authentification:"
        echo "   ‚ö†Ô∏è  Mode d√©veloppement (authentification mock)"
        echo "   üîß Pour configurer Discord: ./configure-discord-tokens.sh"
    fi
    
    echo ""
    echo "üìä Monitoring:"
    echo "   üìã Logs Backend: tail -f /var/log/supervisor/backend.*.log"
    echo "   üìã Logs Frontend: tail -f /var/log/supervisor/frontend.*.log"
    echo "   üìà Status Services: sudo supervisorctl status"
    echo ""
    
    echo "üõ†Ô∏è  Utilitaires:"
    echo "   üîÑ Red√©marrer: sudo supervisorctl restart all"
    echo "   üõë Arr√™ter: sudo supervisorctl stop all"
    echo "   ‚öôÔ∏è  Config Discord: ./configure-discord-tokens.sh"
    echo ""
}

main() {
    print_header
    
    print_info "V√©rification de la configuration..."
    
    # V√©rifier la configuration Discord
    if check_discord_config; then
        print_success "Configuration Discord OAuth d√©tect√©e"
        echo "   üîë Authentification Discord activ√©e"
    else
        echo ""
        print_warning "Aucune configuration Discord OAuth trouv√©e"
        echo ""
        echo -e "${YELLOW}Options:${NC}"
        echo "1. üîß Configurer Discord OAuth maintenant (production)"
        echo "2. üé≠ Continuer en mode d√©veloppement (mock auth)"
        echo ""
        
        while true; do
            echo -n "Votre choix [1/2]: "
            read -r choice
            
            case $choice in
                1)
                    echo ""
                    print_info "Lancement de la configuration Discord..."
                    ./configure-discord-tokens.sh
                    break
                    ;;
                2)
                    echo ""
                    print_info "Mode d√©veloppement activ√©"
                    # S'assurer que le mode mock est bien activ√©
                    if [[ -f "/app/frontend/.env" ]]; then
                        sed -i 's/REACT_APP_USE_MOCK_AUTH=false/REACT_APP_USE_MOCK_AUTH=true/' /app/frontend/.env
                        sed -i 's/REACT_APP_FORCE_DISCORD_AUTH=true/REACT_APP_FORCE_DISCORD_AUTH=false/' /app/frontend/.env
                    fi
                    break
                    ;;
                *)
                    print_error "Choix invalide. Tapez 1 ou 2."
                    ;;
            esac
        done
    fi
    
    echo ""
    print_info "D√©marrage des services..."
    
    if check_services; then
        show_app_info
        
        # Proposer d'ouvrir le navigateur
        echo -n "Ouvrir l'application dans votre navigateur ? [y/N]: "
        read -r open_browser
        
        if [[ $open_browser =~ ^[Yy]$ ]]; then
            if command -v xdg-open >/dev/null 2>&1; then
                xdg-open "http://localhost:3000" >/dev/null 2>&1 &
                print_success "Navigateur ouvert"
            elif command -v open >/dev/null 2>&1; then
                open "http://localhost:3000" >/dev/null 2>&1 &
                print_success "Navigateur ouvert"
            else
                print_info "Ouvrez manuellement: http://localhost:3000"
            fi
        fi
        
        echo ""
        echo -e "${GREEN}üéâ Application pr√™te ! Bon d√©veloppement ! üöÄ${NC}"
        
    else
        echo ""
        print_error "Probl√®me lors du d√©marrage des services"
        echo ""
        echo -e "${YELLOW}D√©pannage:${NC}"
        echo "‚Ä¢ Logs backend: tail -f /var/log/supervisor/backend.*.log"
        echo "‚Ä¢ Logs frontend: tail -f /var/log/supervisor/frontend.*.log"
        echo "‚Ä¢ Status services: sudo supervisorctl status"
        echo "‚Ä¢ Red√©marrage: sudo supervisorctl restart all"
        echo ""
        exit 1
    fi
}

# D√©tecter le r√©pertoire de l'application automatiquement
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# V√©rifier qu'on est dans un r√©pertoire d'application valide
if [[ ! -d "$SCRIPT_DIR/backend" ]] || [[ ! -d "$SCRIPT_DIR/frontend" ]]; then
    echo -e "${RED}‚ùå Ce script doit √™tre ex√©cut√© depuis le r√©pertoire racine de l'application${NC}"
    echo -e "${RED}   R√©pertoires backend/ et frontend/ introuvables dans: $SCRIPT_DIR${NC}"
    exit 1
fi

# D√©finir les chemins dynamiquement
APP_DIR="$SCRIPT_DIR"
BACKEND_DIR="$APP_DIR/backend"
FRONTEND_DIR="$APP_DIR/frontend"

# Lancer l'application
main "$@"
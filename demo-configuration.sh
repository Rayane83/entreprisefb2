#!/bin/bash

# üé¨ Script de d√©monstration - Configuration Discord OAuth
# Montre comment utiliser les nouveaux scripts de configuration

set -e

# Couleurs
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
NC='\033[0m'

print_demo_header() {
    clear
    echo -e "${PURPLE}"
    echo "=================================================================================================="
    echo "üé¨ D√âMONSTRATION - CONFIGURATION S√âCURIS√âE DISCORD OAUTH"
    echo "=================================================================================================="
    echo -e "${NC}"
}

print_step() {
    echo -e "${BLUE}[√âTAPE $1] $2${NC}"
}

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_info() {
    echo -e "${YELLOW}‚ÑπÔ∏è  $1${NC}"
}

demo_configuration() {
    print_demo_header
    
    echo -e "${YELLOW}Cette d√©monstration vous montre les nouvelles fonctionnalit√©s de s√©curit√©${NC}"
    echo -e "${YELLOW}pour la configuration des tokens Discord OAuth dans l'application.${NC}"
    echo ""
    
    print_step "1" "V√©rification de l'√©tat actuel"
    
    # V√©rifier l'√©tat des fichiers .env
    if [[ -f "/app/backend/.env" ]] && [[ -f "/app/frontend/.env" ]]; then
        print_success "Fichiers .env trouv√©s"
        
        # V√©rifier s'ils sont configur√©s
        backend_client_id=$(grep "^DISCORD_CLIENT_ID=" /app/backend/.env | cut -d'=' -f2)
        if [[ -z "$backend_client_id" ]]; then
            print_info "Configuration Discord: Non configur√©e (s√©curis√©)"
        else
            print_info "Configuration Discord: D√©j√† configur√©e"
        fi
    else
        echo -e "${RED}‚ùå Fichiers .env manquants${NC}"
        return 1
    fi
    
    echo ""
    print_step "2" "Fonctionnalit√©s de s√©curit√© impl√©ment√©es"
    
    echo "üîí **S√©curit√© des tokens :**"
    echo "   ‚Ä¢ Saisie masqu√©e pour les secrets Discord"
    echo "   ‚Ä¢ Validation automatique des formats"
    echo "   ‚Ä¢ Sauvegarde automatique des fichiers .env"
    echo "   ‚Ä¢ G√©n√©ration automatique de cl√©s JWT s√©curis√©es"
    echo ""
    
    echo "‚úÖ **Validation automatique :**"
    echo "   ‚Ä¢ Client ID: Format 18-19 chiffres"
    echo "   ‚Ä¢ Client Secret: Minimum 20 caract√®res"
    echo "   ‚Ä¢ Bot Token: Validation optionnelle"
    echo ""
    
    echo "üõ°Ô∏è **Protection des donn√©es :**"
    echo "   ‚Ä¢ Pas de tokens en dur dans le code"
    echo "   ‚Ä¢ Configuration demand√©e √† l'utilisateur"
    echo "   ‚Ä¢ Fichiers .env exclus du contr√¥le de version"
    echo ""
    
    print_step "3" "Scripts disponibles"
    
    echo "üöÄ **./run-app.sh** - Lancement intelligent:"
    echo "   ‚Ä¢ D√©tecte automatiquement la configuration Discord"
    echo "   ‚Ä¢ Propose la configuration si manquante"
    echo "   ‚Ä¢ D√©marre tous les services automatiquement"
    echo "   ‚Ä¢ Mode d√©veloppement avec authentification mock"
    echo ""
    
    echo "üîß **./configure-discord-tokens.sh** - Configuration s√©curis√©e:"
    echo "   ‚Ä¢ Guide √©tape par √©tape pour Discord Developer Portal"
    echo "   ‚Ä¢ Validation en temps r√©el des tokens"
    echo "   ‚Ä¢ Sauvegarde automatique des configurations"
    echo "   ‚Ä¢ Activation automatique du mode production"
    echo ""
    
    print_step "4" "Avantages de la nouvelle approche"
    
    echo "üîê **S√©curit√© renforc√©e :**"
    echo "   ‚úÖ Aucun token en dur dans le code source"
    echo "   ‚úÖ Configuration demand√©e de mani√®re s√©curis√©e"
    echo "   ‚úÖ Validation automatique des formats"
    echo "   ‚úÖ Sauvegardes automatiques avec timestamp"
    echo ""
    
    echo "üöÄ **Facilit√© d'utilisation :**"
    echo "   ‚úÖ Un seul script pour tout configurer"
    echo "   ‚úÖ Guide int√©gr√© pour Discord Developer Portal"
    echo "   ‚úÖ Lancement intelligent de l'application"
    echo "   ‚úÖ Mode d√©veloppement et production"
    echo ""
    
    echo "üõ†Ô∏è **Maintenance simplifi√©e :**"
    echo "   ‚úÖ Scripts r√©utilisables et document√©s"
    echo "   ‚úÖ Gestion d'erreurs compl√®te"
    echo "   ‚úÖ Logs et monitoring int√©gr√©s"
    echo "   ‚úÖ Compatibilit√© avec tous les environnements"
    echo ""
    
    print_step "5" "D√©monstration pratique"
    
    echo ""
    echo -e "${BLUE}Voulez-vous voir une d√©monstration des scripts ? (simulation)${NC}"
    echo "1. Simulation de configuration Discord"
    echo "2. Simulation de lancement d'application"
    echo "3. Passer √† l'utilisation r√©elle"
    echo ""
    
    while true; do
        echo -n "Votre choix [1/2/3]: "
        read -r demo_choice
        
        case $demo_choice in
            1)
                echo ""
                print_info "=== SIMULATION CONFIGURATION DISCORD ==="
                echo ""
                echo "$ ./configure-discord-tokens.sh"
                echo ""
                echo "üîê CONFIGURATION DISCORD OAUTH - PORTAIL ENTREPRISE FLASHBACK FA"
                echo "Ce script configure votre application avec les tokens Discord OAuth."
                echo ""
                echo "üìã GUIDE CR√âATION APPLICATION DISCORD"
                echo "1. üåê Rendez-vous sur: https://discord.com/developers/applications"
                echo "2. üÜï Cr√©er une nouvelle application..."
                echo ""
                echo "üîë DISCORD CLIENT ID"
                echo "Entrez votre Discord Client ID: [SAISIE UTILISATEUR]"
                echo "‚úÖ Client ID valide: 123456789012345678"
                echo ""
                echo "üîê DISCORD CLIENT SECRET"
                echo "Entrez votre Discord Client Secret: [SAISIE MASQU√âE]"
                echo "‚úÖ Client Secret valide (32 caract√®res)"
                echo ""
                echo "üéâ CONFIGURATION TERMIN√âE !"
                echo "‚úÖ Backend configur√©"
                echo "‚úÖ Frontend configur√©"
                echo "‚úÖ Mode authentification Discord activ√©"
                echo ""
                break
                ;;
            2)
                echo ""
                print_info "=== SIMULATION LANCEMENT APPLICATION ==="
                echo ""
                echo "$ ./run-app.sh"
                echo ""
                echo "üöÄ LANCEMENT - PORTAIL ENTREPRISE FLASHBACK FA v2.0.0"
                echo "‚ÑπÔ∏è  V√©rification de la configuration..."
                echo "‚úÖ Configuration Discord OAuth d√©tect√©e"
                echo "‚ÑπÔ∏è  D√©marrage des services..."
                echo "‚úÖ Base de donn√©es MySQL active"
                echo "‚úÖ Backend FastAPI op√©rationnel (port 8001)"
                echo "‚úÖ Frontend React op√©rationnel (port 3000)"
                echo ""
                echo "üåü APPLICATION D√âMARR√âE AVEC SUCC√àS !"
                echo "üì± Application: http://localhost:3000"
                echo "üîß API Backend: http://localhost:8001"
                echo "üîê Discord OAuth configur√© et actif"
                echo ""
                break
                ;;
            3)
                echo ""
                print_info "Pr√™t pour l'utilisation r√©elle !"
                break
                ;;
            *)
                echo -e "${RED}Choix invalide. Tapez 1, 2 ou 3.${NC}"
                ;;
        esac
    done
    
    echo ""
    print_step "6" "Utilisation r√©elle"
    
    echo -e "${GREEN}üéâ La d√©monstration est termin√©e !${NC}"
    echo ""
    echo -e "${YELLOW}Pour utiliser l'application en mode production :${NC}"
    echo ""
    echo "1. **Configuration Discord :**"
    echo "   ./configure-discord-tokens.sh"
    echo ""
    echo "2. **Lancement de l'application :**"
    echo "   ./run-app.sh"
    echo ""
    echo "3. **Acc√®s √† l'application :**"
    echo "   http://localhost:3000"
    echo ""
    
    echo -e "${BLUE}Voulez-vous lancer la configuration r√©elle maintenant ? [y/N]:${NC}"
    read -r launch_real
    
    if [[ $launch_real =~ ^[Yy]$ ]]; then
        echo ""
        print_info "Lancement de la configuration r√©elle..."
        exec ./run-app.sh
    else
        echo ""
        echo -e "${PURPLE}D√©monstration termin√©e ! Les scripts sont pr√™ts √† √™tre utilis√©s.${NC}"
    fi
}

# V√©rifier qu'on est dans le bon r√©pertoire
if [[ ! -f "./run-app.sh" ]] || [[ ! -f "./configure-discord-tokens.sh" ]]; then
    echo -e "${RED}‚ùå Ce script doit √™tre ex√©cut√© depuis /app avec les scripts de configuration${NC}"
    exit 1
fi

# Lancer la d√©monstration
demo_configuration "$@"